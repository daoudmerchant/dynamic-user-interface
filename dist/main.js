/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const menu = (function() {\n    // global menu functions\n    const createContainer = function(className) {\n        const container = document.createElement(\"div\");\n        container.className = className;\n        return container;\n    }\n    const moveLink = function(container, links) {\n        container.appendChild(links);\n    }\n\n    const displayDropDown = function(siblingBefore, dropdownLinks) {\n    \n        // make dropdown container\n        const container = createContainer(\"dropdownbox\");\n    \n        // Functions shared by click on link and click on window\n        const fadeOutAndClose = function(linkContainer) {\n            if (!container.classList.contains(\"extendDown\")) {\n                return;\n            }\n            linkContainer.classList.remove(\"fade\"); // fade out links\n            setTimeout(() => {\n                linkContainer.classList.remove(\"revealGrid\"); // hide links\n                container.classList.remove(\"extendDown\"); // retract panel\n            }, 250);\n        }\n    \n        const clearSelected = function() {\n            dropdownLinks.forEach(link => link.classList.remove(\"selected\"));\n        }\n    \n        // function for click on dropdown link\n        const fillOrClosePanel = function() {\n            clearSelected();\n            const linkBox = document.querySelector(`#${this.id}links`);\n            const fadeInLinks = function() {\n                linkBox.classList.add(\"revealGrid\");\n                setTimeout(() => linkBox.classList.add(\"fade\"), 50);\n            }\n            if (!container.classList.contains(\"extendDown\")) { // panel was closed\n                this.classList.add(\"selected\");\n                container.classList.add(\"extendDown\");\n                setTimeout(() => fadeInLinks(), 250);\n            } else { // panel open\n                if (linkBox.classList.contains(\"revealGrid\")) { // currently selected\n                    fadeOutAndClose(linkBox);\n                } else { // other links displayed\n                    this.classList.add(\"selected\");\n                    const currentBox = document.querySelector(\".revealGrid\");\n                    currentBox.classList.remove(\"fade\"); // fade out current\n                    setTimeout(() => {\n                        currentBox.classList.remove(\"revealGrid\");\n                        fadeInLinks();\n                    }, 250);\n                }\n            }\n        }\n        \n        // fill container, add dropdown link click events\n        dropdownLinks.forEach(link => {\n            moveLink(container, link.nextElementSibling);\n            link.addEventListener(\"click\", fillOrClosePanel); // function on link click\n        })\n\n        // insert container\n        siblingBefore.after(container);\n    \n        // function for click on window\n        window.addEventListener(\"click\", e => {\n            if (e.target.tagName !== \"A\") {\n                clearSelected();\n                const currentBox = document.querySelector(\".revealGrid\");\n                fadeOutAndClose(currentBox);\n            }\n        });\n    };\n    \n    const displaySideBar = function(siblingBefore, dropdownLinks, links) {\n        \n        // make sidebar container\n        const container = createContainer(\"sidebar\")\n\n        // fill container\n        moveLink(container, links);\n\n        // add dropdown link click events\n        const toggleSublinks = function() {\n            this.nextElementSibling.classList.toggle(\"revealFlex\");\n        }\n        dropdownLinks.forEach(link => {\n            link.addEventListener(\"click\", toggleSublinks);\n        })\n\n        // insert container\n        siblingBefore.after(container);\n        \n        // add reveal menu on click burger\n        const burger = document.querySelector(\".burger\");\n        const toggleSidebar = function() {\n            dropdownLinks.forEach(link => link.nextElementSibling.classList.remove(\"revealFlex\"));\n            container.classList.toggle(\"revealFlex\");\n        }\n        burger.addEventListener(\"click\", toggleSidebar);\n    };\n\n    return {\n        displayDropDown,\n        displaySideBar\n    }\n})();\n\n// gallery function\n\nconst slideGallery = function(gallery, galleryNav) {\n    const galleryChildren = galleryNav.children;\n\n    // extract elements\n    const icons = Array.from(galleryChildren).slice(1, (galleryNav.children.length - 1));\n    const arrowLeft = galleryChildren[0];\n    const arrowRight = galleryChildren[galleryChildren.length - 1];\n\n    // counter module\n    const counter = (function() {\n        let i = 0;\n        const moveForwards = function() {\n            if (i < icons.length - 1) {\n                i++;\n            } else {\n                i = 0;\n            }\n        };\n        const moveBackwards = function() {\n            if (i > 0) {\n                i--;\n            } else {\n                i = (icons.length - 1); // back to end\n            }\n        }\n        const selectImage = function(num) {\n            i = Number(num);\n        }\n        return {\n            moveForwards,\n            moveBackwards,\n            selectImage,\n            get current() { return i }\n        }\n    })();\n    \n    // subfunctions\n    const toggleIcon = function() {\n        icons[counter.current].classList.toggle(\"selectIcon\");\n    };\n    const toggleAndMove = function() {\n        toggleIcon();\n        gallery.setAttribute(\"style\", `right:${counter.current}00%`)\n    }\n    const moveGallery = function(callback) {\n        toggleIcon();\n        callback();\n        toggleAndMove();\n    }\n\n    // scroll on load\n    const cycleGallery = setInterval(() => moveGallery(counter.moveForwards), 5000);\n\n    // event listeners\n    arrowRight.addEventListener(\"click\", () => {\n        clearInterval(cycleGallery);\n        moveGallery(counter.moveForwards);\n    });\n    arrowLeft.addEventListener(\"click\", () => {\n        clearInterval(cycleGallery);\n        moveGallery(counter.moveBackwards);\n    });\n    icons.forEach(icon => icon.addEventListener(\"click\", e => {\n        clearInterval(cycleGallery);\n        moveGallery(() => counter.selectImage(e.target.dataset.image))\n    }));\n};\n\n// Note: ALL ABOVE could be put on alternative file and imported\n\n(function() {\n    // select elements\n    const nav = document.querySelector(\"nav\");\n    const dropLinks = document.querySelectorAll(\".dropdown\");\n    // choose top or side menu\n    const width = window.matchMedia(\"(min-width: 880px\");\n    const chooseMenu = function(width) {\n        if (width.matches) {\n            menu.displayDropDown(nav, dropLinks);\n        } else {\n            const mainLinks = document.querySelector(\"#mainlinks\");\n            menu.displaySideBar(nav, dropLinks, mainLinks);\n        }\n    }\n    chooseMenu(width);\n\n    // start gallery\n    const gallery = document.querySelector(\"#gallery\");\n    const galleryNav = document.querySelector(\"#gallerynav\");\n    slideGallery(gallery, galleryNav);\n})();\n\n//# sourceURL=webpack://dynamic-user-interface/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;